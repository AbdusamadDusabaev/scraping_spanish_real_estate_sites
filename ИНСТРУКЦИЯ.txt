
ИНСТРУКЦИЯ ПО БАЗЕ ДАННЫХ
========================================================================================================================
В базе данных создано 5 таблицы:
1. Таблица объектов недвижимости на аренду - в файле config.py ее название содержится в переменной table_objects_to_rent
2. Таблица объектов недвижимости на продажу - в файле config.py ее название содержится в переменной table_objects_to_buy
3. Таблица url-адресов на аренду - в файле config.py ее название содержится в переменной table_urls_to_rent
4. Таблица url-адресов на продажу - в файле config.py ее название содержится в переменной table_urls_to_buy
5. Таблица регионов - в файле config.py ее название содержится в переменной table_regions


Поля таблиц базы данных интуитивно понятны. Каждое поле содержит название, которому оно соответствует. Однако некоторые
поля реализованы в формате флажков. При работе с базой данных стоит учитывать значение этих флажков:
1. Поле favorite - если значение 1, то объект имеет значение избранного объекта, если 0 - то не имеет
2. Поле seller_type - если значение 1, то тип продавца particular, если 0 - то agency
3. Поле object_type - если значение 1, то объект типа Piso, если 0 - то Casa
4. Поле transaction_type - если значение 1, то тип сделки аренда, если 0 - то продажа
========================================================================================================================


ИНСТРУКЦИЯ ПО ПАРСЕРУ
========================================================================================================================
1. Первым делом необходимо заполнить все необходимые значения в файле config.py.
Этот файл определяет конфигурацию базы данных, в которую будет записываться результат работы парсера.
Если необходимо создать новую таблицу для результата работы парсера, это можно сделать прямо в скрипте.
Для этого достаточно установить корректные значения в файле config.py, а затем запустить скрипт database.py
Скрипт database.py создаст таблицы в базе данных с именами таблиц, которые вы задали в файле config.py. Помимо этого
файл database.py также создает директорию photos, в которую будут загружаться фотографии объектов.
Если вы используете парсер в первый раз или в первый раз после критического обновления, то запуск скрипта database.py
обязателен
------------------------------------------------------------------------------------------------------------------------
2. Чтобы начать парсер, необходимо запустить скрипт main.py и следовать подсказкам,
всплывающим в консоли при работе скрипта. Если хотите создать таблицы в базе данных в автоматическом формате, запустите
скрипт database.py и он все сделает за вас. При запуске main.py вам доступно два режима работы: первый - это парсинг и
второй - это запись часто используемых url в базу данных. Чтобы записать часто используемые url в базу данных,
необходимо записать их в файле urls_to_buy.txt и urls_to_rent.txt и запустить второй режим работы скрипта main.py.
Также стоит учесть, чтобы каждый url находился на новой строке. Никаких разделительных символов между url-адресами
писать не нужно. При добавлении url в отобранные, им автоматически присваивается статус active. То есть они будут
задействованы при парсинге по отобранным url. Если при парсинге по отобранным url какие-то url из списка отобранных
парсить не нужно, то им достаточно установить значение 0 в поле active. В парсинге по отобранным url участвуют только
активные отобранные url
------------------------------------------------------------------------------------------------------------------------
3. При указании URL адреса для парсинга, необходимо учитывать следующее:

- В целях увеличения скорости парсера, фильтрация по ключевому слову particular происходит только на тех сайтах,
на которых нет встроенного фильтра по этому параметру. Если на сайте есть встроенный фильтр,
то необходимо передавать URL с учетом этого фильтра. В противном случае парсер соберет все значения,
игнорируя фильтрацию по particular

- Сайты, на которых нет встроенной фильтрации по параметру particular:
1) pisos.com
2) fotocasa.es
3) habitaclia.com
4) idealista.com

- Сайты, на которых есть встроенная фильтраця по параметру particular:
1) yaencontre.com
2) enalquiler.com

- При настройке фильтров на сайте, не рекомендуется одновременно выбирать два разных вида объекта
(например, лофты и апартаменты), так как URL адрес может быть крайне не предсказуемым и не корректным для парсера

- Фильтры по виду объекта, городу и типу сделки (аренда или продажа) указывать необходимо.
При этом, необходимо указывать только эти фильтры. Для некоторых сайтов также фильтр по particular.
Указание фильтров по остальным параметрам может привести к некорректной работе парсера в некоторых случаях
------------------------------------------------------------------------------------------------------------------------
4. Перед повторным использованием парсера, необходимо учесть, что если вы включите режим удаления данных, то каждое
повторное использование парсера будет стирать все предыдущие данные в таблице базы данных, кроме тех записей, что
отмечены избранными. Это правило не касается парсинга по часто используемым url. При парсинге по часто используемых url,
парсер записывает результат парсинга всех ссылок в базу данных, как если бы парсинг происходил только по одной ссылке.
Вне зависимости от вида парсинга данных, отобранные объекты из базы данных автоматически не удаляются. Их возможно
удалить только вручную
------------------------------------------------------------------------------------------------------------------------
5. Разные сайты обрабатываются разное количество времени и это нормально. Некоторые сайты обрабатывают информацию со
скоростью 15 объектов в секунду, а некоторым на обработку 1 объекта требуется более 2 секунд. Это зависит от структуры
сайта и многих других причин. Скорость работы также напрямую зависит от количества объектов в выбранном разделе.
Поэтому если какой-то сайт обрабатывается долго (из таких сайтов можно выделить pisos.com и idealista.com)
не стоит переживать. Просто ему нужно несколько больше времени на получение данных
------------------------------------------------------------------------------------------------------------------------
6. Сайт idealista.com имеет достаточно сильную защиту от парсинга, что приводит к следующим моментам:
1) При запуске каждого парсера один раз в самом начале необходимо вручную пройти ReCapcha
2) При достаточно большом количестве запросов на сайт, сайт временно блокирует IP, поэтому необходимо использовать
прокси-сервер (желательно динамический) при парсинге данного сайта
------------------------------------------------------------------------------------------------------------------------
7. Парсинг Facebook Маркетплейс работает несколько по другой логике и записывается в отдельную таблицу в базе данных.
Для парсинга Facebook Маркетплейса необходимо авторизоваться в аккаунте, который привязан к парсеру и вручную выбрать
фильтрацию по региону. После чего запустить скрипт и дать ему входные данные в виде ссылки на категорию + информацию о
выбранном городе и регионе. Если фильтрацию по городу и регоину поменять в аккаунте, то она также поменяется и в
парсере. Это объясняется тем, что данные фильтрации сохраняются на серверах сайта. Из-за этой особенности парсинг
Facebook Маркетплейс не может осуществляться через частовстречающиеся URL, так как требует ручной настройки под каждый
регион.
P.S. Данные города и региона по Facebook Маркетплейс также записываются в общую таблицу
------------------------------------------------------------------------------------------------------------------------
8. Если парсер ведет себя странно, выдает ошибки или не корректные данные, попробуйте запустить его заново.
Иногда ошибки происходят на стороне сервера. На такие ошибки, к сожалению, мы практически не можем повлиять.
Если повторный запуск не принес положительный результат, или у вас возникли какие-то вопросы,
свяжитесь со мной для устранения проблемы
Telegram: https://t.me/Buldog1702
WhatsApp: +7(929)978-49-56
========================================================================================================================


ПРЕДНАСТРОЙКА ПАРСЕРА:
========================================================================================================================
Вполне вероятно, что ряд модулей и библиотек для работы парсера у вас еще не установлены. Чтобы решить эту проблему
достаточно просто ввести в терминал следующие команды:

pip install PyMySQL
pip install selenium
pip install beautifulsoup4
pip install fake-useragent
pip install undetected_chromedriver
========================================================================================================================